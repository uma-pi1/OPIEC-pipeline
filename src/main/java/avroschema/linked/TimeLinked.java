/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avroschema.linked;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TimeLinked extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TimeLinked\",\"namespace\":\"avroschema.linked\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"timex3_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"timex3_xml\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"disambiguated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"core_words\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TokenLinked\",\"fields\":[{\"name\":\"pos\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"ner\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"span\",\"type\":{\"type\":\"record\",\"name\":\"Span\",\"fields\":[{\"name\":\"start_index\",\"type\":[\"int\",\"null\"]},{\"name\":\"end_index\",\"type\":[\"int\",\"null\"]}]}},{\"name\":\"lemma\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"word\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"index\",\"type\":[\"int\",\"null\"]},{\"name\":\"w_link\",\"type\":{\"type\":\"record\",\"name\":\"WikiLink\",\"fields\":[{\"name\":\"offset_begin_ind\",\"type\":\"int\"},{\"name\":\"offset_end_ind\",\"type\":\"int\"},{\"name\":\"phrase\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"wiki_link\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}}]},{\"name\":\"pre_mods\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"post_mods\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"all_words\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"predicate\",\"type\":[\"null\",\"TokenLinked\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String id;
  @Deprecated public java.lang.String timex3_type;
  @Deprecated public java.lang.String timex3_xml;
  @Deprecated public java.lang.String disambiguated;
  @Deprecated public java.util.List<avroschema.linked.TokenLinked> core_words;
  @Deprecated public java.util.List<avroschema.linked.TokenLinked> pre_mods;
  @Deprecated public java.util.List<avroschema.linked.TokenLinked> post_mods;
  @Deprecated public java.util.List<avroschema.linked.TokenLinked> all_words;
  @Deprecated public avroschema.linked.TokenLinked predicate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TimeLinked() {}

  /**
   * All-args constructor.
   */
  public TimeLinked(java.lang.String id, java.lang.String timex3_type, java.lang.String timex3_xml, java.lang.String disambiguated, java.util.List<avroschema.linked.TokenLinked> core_words, java.util.List<avroschema.linked.TokenLinked> pre_mods, java.util.List<avroschema.linked.TokenLinked> post_mods, java.util.List<avroschema.linked.TokenLinked> all_words, avroschema.linked.TokenLinked predicate) {
    this.id = id;
    this.timex3_type = timex3_type;
    this.timex3_xml = timex3_xml;
    this.disambiguated = disambiguated;
    this.core_words = core_words;
    this.pre_mods = pre_mods;
    this.post_mods = post_mods;
    this.all_words = all_words;
    this.predicate = predicate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return timex3_type;
    case 2: return timex3_xml;
    case 3: return disambiguated;
    case 4: return core_words;
    case 5: return pre_mods;
    case 6: return post_mods;
    case 7: return all_words;
    case 8: return predicate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: timex3_type = (java.lang.String)value$; break;
    case 2: timex3_xml = (java.lang.String)value$; break;
    case 3: disambiguated = (java.lang.String)value$; break;
    case 4: core_words = (java.util.List<avroschema.linked.TokenLinked>)value$; break;
    case 5: pre_mods = (java.util.List<avroschema.linked.TokenLinked>)value$; break;
    case 6: post_mods = (java.util.List<avroschema.linked.TokenLinked>)value$; break;
    case 7: all_words = (java.util.List<avroschema.linked.TokenLinked>)value$; break;
    case 8: predicate = (avroschema.linked.TokenLinked)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'timex3_type' field.
   */
  public java.lang.String getTimex3Type() {
    return timex3_type;
  }

  /**
   * Sets the value of the 'timex3_type' field.
   * @param value the value to set.
   */
  public void setTimex3Type(java.lang.String value) {
    this.timex3_type = value;
  }

  /**
   * Gets the value of the 'timex3_xml' field.
   */
  public java.lang.String getTimex3Xml() {
    return timex3_xml;
  }

  /**
   * Sets the value of the 'timex3_xml' field.
   * @param value the value to set.
   */
  public void setTimex3Xml(java.lang.String value) {
    this.timex3_xml = value;
  }

  /**
   * Gets the value of the 'disambiguated' field.
   */
  public java.lang.String getDisambiguated() {
    return disambiguated;
  }

  /**
   * Sets the value of the 'disambiguated' field.
   * @param value the value to set.
   */
  public void setDisambiguated(java.lang.String value) {
    this.disambiguated = value;
  }

  /**
   * Gets the value of the 'core_words' field.
   */
  public java.util.List<avroschema.linked.TokenLinked> getCoreWords() {
    return core_words;
  }

  /**
   * Sets the value of the 'core_words' field.
   * @param value the value to set.
   */
  public void setCoreWords(java.util.List<avroschema.linked.TokenLinked> value) {
    this.core_words = value;
  }

  /**
   * Gets the value of the 'pre_mods' field.
   */
  public java.util.List<avroschema.linked.TokenLinked> getPreMods() {
    return pre_mods;
  }

  /**
   * Sets the value of the 'pre_mods' field.
   * @param value the value to set.
   */
  public void setPreMods(java.util.List<avroschema.linked.TokenLinked> value) {
    this.pre_mods = value;
  }

  /**
   * Gets the value of the 'post_mods' field.
   */
  public java.util.List<avroschema.linked.TokenLinked> getPostMods() {
    return post_mods;
  }

  /**
   * Sets the value of the 'post_mods' field.
   * @param value the value to set.
   */
  public void setPostMods(java.util.List<avroschema.linked.TokenLinked> value) {
    this.post_mods = value;
  }

  /**
   * Gets the value of the 'all_words' field.
   */
  public java.util.List<avroschema.linked.TokenLinked> getAllWords() {
    return all_words;
  }

  /**
   * Sets the value of the 'all_words' field.
   * @param value the value to set.
   */
  public void setAllWords(java.util.List<avroschema.linked.TokenLinked> value) {
    this.all_words = value;
  }

  /**
   * Gets the value of the 'predicate' field.
   */
  public avroschema.linked.TokenLinked getPredicate() {
    return predicate;
  }

  /**
   * Sets the value of the 'predicate' field.
   * @param value the value to set.
   */
  public void setPredicate(avroschema.linked.TokenLinked value) {
    this.predicate = value;
  }

  /** Creates a new TimeLinked RecordBuilder */
  public static avroschema.linked.TimeLinked.Builder newBuilder() {
    return new avroschema.linked.TimeLinked.Builder();
  }
  
  /** Creates a new TimeLinked RecordBuilder by copying an existing Builder */
  public static avroschema.linked.TimeLinked.Builder newBuilder(avroschema.linked.TimeLinked.Builder other) {
    return new avroschema.linked.TimeLinked.Builder(other);
  }
  
  /** Creates a new TimeLinked RecordBuilder by copying an existing TimeLinked instance */
  public static avroschema.linked.TimeLinked.Builder newBuilder(avroschema.linked.TimeLinked other) {
    return new avroschema.linked.TimeLinked.Builder(other);
  }
  
  /**
   * RecordBuilder for TimeLinked instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TimeLinked>
    implements org.apache.avro.data.RecordBuilder<TimeLinked> {

    private java.lang.String id;
    private java.lang.String timex3_type;
    private java.lang.String timex3_xml;
    private java.lang.String disambiguated;
    private java.util.List<avroschema.linked.TokenLinked> core_words;
    private java.util.List<avroschema.linked.TokenLinked> pre_mods;
    private java.util.List<avroschema.linked.TokenLinked> post_mods;
    private java.util.List<avroschema.linked.TokenLinked> all_words;
    private avroschema.linked.TokenLinked predicate;

    /** Creates a new Builder */
    private Builder() {
      super(avroschema.linked.TimeLinked.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avroschema.linked.TimeLinked.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timex3_type)) {
        this.timex3_type = data().deepCopy(fields()[1].schema(), other.timex3_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timex3_xml)) {
        this.timex3_xml = data().deepCopy(fields()[2].schema(), other.timex3_xml);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.disambiguated)) {
        this.disambiguated = data().deepCopy(fields()[3].schema(), other.disambiguated);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.core_words)) {
        this.core_words = data().deepCopy(fields()[4].schema(), other.core_words);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pre_mods)) {
        this.pre_mods = data().deepCopy(fields()[5].schema(), other.pre_mods);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.post_mods)) {
        this.post_mods = data().deepCopy(fields()[6].schema(), other.post_mods);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.all_words)) {
        this.all_words = data().deepCopy(fields()[7].schema(), other.all_words);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.predicate)) {
        this.predicate = data().deepCopy(fields()[8].schema(), other.predicate);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TimeLinked instance */
    private Builder(avroschema.linked.TimeLinked other) {
            super(avroschema.linked.TimeLinked.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timex3_type)) {
        this.timex3_type = data().deepCopy(fields()[1].schema(), other.timex3_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timex3_xml)) {
        this.timex3_xml = data().deepCopy(fields()[2].schema(), other.timex3_xml);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.disambiguated)) {
        this.disambiguated = data().deepCopy(fields()[3].schema(), other.disambiguated);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.core_words)) {
        this.core_words = data().deepCopy(fields()[4].schema(), other.core_words);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pre_mods)) {
        this.pre_mods = data().deepCopy(fields()[5].schema(), other.pre_mods);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.post_mods)) {
        this.post_mods = data().deepCopy(fields()[6].schema(), other.post_mods);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.all_words)) {
        this.all_words = data().deepCopy(fields()[7].schema(), other.all_words);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.predicate)) {
        this.predicate = data().deepCopy(fields()[8].schema(), other.predicate);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public avroschema.linked.TimeLinked.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public avroschema.linked.TimeLinked.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'timex3_type' field */
    public java.lang.String getTimex3Type() {
      return timex3_type;
    }
    
    /** Sets the value of the 'timex3_type' field */
    public avroschema.linked.TimeLinked.Builder setTimex3Type(java.lang.String value) {
      validate(fields()[1], value);
      this.timex3_type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'timex3_type' field has been set */
    public boolean hasTimex3Type() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'timex3_type' field */
    public avroschema.linked.TimeLinked.Builder clearTimex3Type() {
      timex3_type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'timex3_xml' field */
    public java.lang.String getTimex3Xml() {
      return timex3_xml;
    }
    
    /** Sets the value of the 'timex3_xml' field */
    public avroschema.linked.TimeLinked.Builder setTimex3Xml(java.lang.String value) {
      validate(fields()[2], value);
      this.timex3_xml = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'timex3_xml' field has been set */
    public boolean hasTimex3Xml() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'timex3_xml' field */
    public avroschema.linked.TimeLinked.Builder clearTimex3Xml() {
      timex3_xml = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'disambiguated' field */
    public java.lang.String getDisambiguated() {
      return disambiguated;
    }
    
    /** Sets the value of the 'disambiguated' field */
    public avroschema.linked.TimeLinked.Builder setDisambiguated(java.lang.String value) {
      validate(fields()[3], value);
      this.disambiguated = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'disambiguated' field has been set */
    public boolean hasDisambiguated() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'disambiguated' field */
    public avroschema.linked.TimeLinked.Builder clearDisambiguated() {
      disambiguated = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'core_words' field */
    public java.util.List<avroschema.linked.TokenLinked> getCoreWords() {
      return core_words;
    }
    
    /** Sets the value of the 'core_words' field */
    public avroschema.linked.TimeLinked.Builder setCoreWords(java.util.List<avroschema.linked.TokenLinked> value) {
      validate(fields()[4], value);
      this.core_words = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'core_words' field has been set */
    public boolean hasCoreWords() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'core_words' field */
    public avroschema.linked.TimeLinked.Builder clearCoreWords() {
      core_words = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'pre_mods' field */
    public java.util.List<avroschema.linked.TokenLinked> getPreMods() {
      return pre_mods;
    }
    
    /** Sets the value of the 'pre_mods' field */
    public avroschema.linked.TimeLinked.Builder setPreMods(java.util.List<avroschema.linked.TokenLinked> value) {
      validate(fields()[5], value);
      this.pre_mods = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'pre_mods' field has been set */
    public boolean hasPreMods() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'pre_mods' field */
    public avroschema.linked.TimeLinked.Builder clearPreMods() {
      pre_mods = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'post_mods' field */
    public java.util.List<avroschema.linked.TokenLinked> getPostMods() {
      return post_mods;
    }
    
    /** Sets the value of the 'post_mods' field */
    public avroschema.linked.TimeLinked.Builder setPostMods(java.util.List<avroschema.linked.TokenLinked> value) {
      validate(fields()[6], value);
      this.post_mods = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'post_mods' field has been set */
    public boolean hasPostMods() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'post_mods' field */
    public avroschema.linked.TimeLinked.Builder clearPostMods() {
      post_mods = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'all_words' field */
    public java.util.List<avroschema.linked.TokenLinked> getAllWords() {
      return all_words;
    }
    
    /** Sets the value of the 'all_words' field */
    public avroschema.linked.TimeLinked.Builder setAllWords(java.util.List<avroschema.linked.TokenLinked> value) {
      validate(fields()[7], value);
      this.all_words = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'all_words' field has been set */
    public boolean hasAllWords() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'all_words' field */
    public avroschema.linked.TimeLinked.Builder clearAllWords() {
      all_words = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'predicate' field */
    public avroschema.linked.TokenLinked getPredicate() {
      return predicate;
    }
    
    /** Sets the value of the 'predicate' field */
    public avroschema.linked.TimeLinked.Builder setPredicate(avroschema.linked.TokenLinked value) {
      validate(fields()[8], value);
      this.predicate = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'predicate' field has been set */
    public boolean hasPredicate() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'predicate' field */
    public avroschema.linked.TimeLinked.Builder clearPredicate() {
      predicate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public TimeLinked build() {
      try {
        TimeLinked record = new TimeLinked();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.timex3_type = fieldSetFlags()[1] ? this.timex3_type : (java.lang.String) defaultValue(fields()[1]);
        record.timex3_xml = fieldSetFlags()[2] ? this.timex3_xml : (java.lang.String) defaultValue(fields()[2]);
        record.disambiguated = fieldSetFlags()[3] ? this.disambiguated : (java.lang.String) defaultValue(fields()[3]);
        record.core_words = fieldSetFlags()[4] ? this.core_words : (java.util.List<avroschema.linked.TokenLinked>) defaultValue(fields()[4]);
        record.pre_mods = fieldSetFlags()[5] ? this.pre_mods : (java.util.List<avroschema.linked.TokenLinked>) defaultValue(fields()[5]);
        record.post_mods = fieldSetFlags()[6] ? this.post_mods : (java.util.List<avroschema.linked.TokenLinked>) defaultValue(fields()[6]);
        record.all_words = fieldSetFlags()[7] ? this.all_words : (java.util.List<avroschema.linked.TokenLinked>) defaultValue(fields()[7]);
        record.predicate = fieldSetFlags()[8] ? this.predicate : (avroschema.linked.TokenLinked) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
