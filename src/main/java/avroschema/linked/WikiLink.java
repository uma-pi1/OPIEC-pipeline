/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avroschema.linked;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class WikiLink extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WikiLink\",\"namespace\":\"avroschema.linked\",\"fields\":[{\"name\":\"offset_begin_ind\",\"type\":\"int\"},{\"name\":\"offset_end_ind\",\"type\":\"int\"},{\"name\":\"phrase\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"wiki_link\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int offset_begin_ind;
  @Deprecated public int offset_end_ind;
  @Deprecated public java.lang.String phrase;
  @Deprecated public java.lang.String wiki_link;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public WikiLink() {}

  /**
   * All-args constructor.
   */
  public WikiLink(java.lang.Integer offset_begin_ind, java.lang.Integer offset_end_ind, java.lang.String phrase, java.lang.String wiki_link) {
    this.offset_begin_ind = offset_begin_ind;
    this.offset_end_ind = offset_end_ind;
    this.phrase = phrase;
    this.wiki_link = wiki_link;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return offset_begin_ind;
    case 1: return offset_end_ind;
    case 2: return phrase;
    case 3: return wiki_link;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: offset_begin_ind = (java.lang.Integer)value$; break;
    case 1: offset_end_ind = (java.lang.Integer)value$; break;
    case 2: phrase = (java.lang.String)value$; break;
    case 3: wiki_link = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'offset_begin_ind' field.
   */
  public java.lang.Integer getOffsetBeginInd() {
    return offset_begin_ind;
  }

  /**
   * Sets the value of the 'offset_begin_ind' field.
   * @param value the value to set.
   */
  public void setOffsetBeginInd(java.lang.Integer value) {
    this.offset_begin_ind = value;
  }

  /**
   * Gets the value of the 'offset_end_ind' field.
   */
  public java.lang.Integer getOffsetEndInd() {
    return offset_end_ind;
  }

  /**
   * Sets the value of the 'offset_end_ind' field.
   * @param value the value to set.
   */
  public void setOffsetEndInd(java.lang.Integer value) {
    this.offset_end_ind = value;
  }

  /**
   * Gets the value of the 'phrase' field.
   */
  public java.lang.String getPhrase() {
    return phrase;
  }

  /**
   * Sets the value of the 'phrase' field.
   * @param value the value to set.
   */
  public void setPhrase(java.lang.String value) {
    this.phrase = value;
  }

  /**
   * Gets the value of the 'wiki_link' field.
   */
  public java.lang.String getWikiLink() {
    return wiki_link;
  }

  /**
   * Sets the value of the 'wiki_link' field.
   * @param value the value to set.
   */
  public void setWikiLink(java.lang.String value) {
    this.wiki_link = value;
  }

  /** Creates a new WikiLink RecordBuilder */
  public static avroschema.linked.WikiLink.Builder newBuilder() {
    return new avroschema.linked.WikiLink.Builder();
  }
  
  /** Creates a new WikiLink RecordBuilder by copying an existing Builder */
  public static avroschema.linked.WikiLink.Builder newBuilder(avroschema.linked.WikiLink.Builder other) {
    return new avroschema.linked.WikiLink.Builder(other);
  }
  
  /** Creates a new WikiLink RecordBuilder by copying an existing WikiLink instance */
  public static avroschema.linked.WikiLink.Builder newBuilder(avroschema.linked.WikiLink other) {
    return new avroschema.linked.WikiLink.Builder(other);
  }
  
  /**
   * RecordBuilder for WikiLink instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WikiLink>
    implements org.apache.avro.data.RecordBuilder<WikiLink> {

    private int offset_begin_ind;
    private int offset_end_ind;
    private java.lang.String phrase;
    private java.lang.String wiki_link;

    /** Creates a new Builder */
    private Builder() {
      super(avroschema.linked.WikiLink.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avroschema.linked.WikiLink.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.offset_begin_ind)) {
        this.offset_begin_ind = data().deepCopy(fields()[0].schema(), other.offset_begin_ind);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.offset_end_ind)) {
        this.offset_end_ind = data().deepCopy(fields()[1].schema(), other.offset_end_ind);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.phrase)) {
        this.phrase = data().deepCopy(fields()[2].schema(), other.phrase);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.wiki_link)) {
        this.wiki_link = data().deepCopy(fields()[3].schema(), other.wiki_link);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing WikiLink instance */
    private Builder(avroschema.linked.WikiLink other) {
            super(avroschema.linked.WikiLink.SCHEMA$);
      if (isValidValue(fields()[0], other.offset_begin_ind)) {
        this.offset_begin_ind = data().deepCopy(fields()[0].schema(), other.offset_begin_ind);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.offset_end_ind)) {
        this.offset_end_ind = data().deepCopy(fields()[1].schema(), other.offset_end_ind);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.phrase)) {
        this.phrase = data().deepCopy(fields()[2].schema(), other.phrase);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.wiki_link)) {
        this.wiki_link = data().deepCopy(fields()[3].schema(), other.wiki_link);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'offset_begin_ind' field */
    public java.lang.Integer getOffsetBeginInd() {
      return offset_begin_ind;
    }
    
    /** Sets the value of the 'offset_begin_ind' field */
    public avroschema.linked.WikiLink.Builder setOffsetBeginInd(int value) {
      validate(fields()[0], value);
      this.offset_begin_ind = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'offset_begin_ind' field has been set */
    public boolean hasOffsetBeginInd() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'offset_begin_ind' field */
    public avroschema.linked.WikiLink.Builder clearOffsetBeginInd() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'offset_end_ind' field */
    public java.lang.Integer getOffsetEndInd() {
      return offset_end_ind;
    }
    
    /** Sets the value of the 'offset_end_ind' field */
    public avroschema.linked.WikiLink.Builder setOffsetEndInd(int value) {
      validate(fields()[1], value);
      this.offset_end_ind = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'offset_end_ind' field has been set */
    public boolean hasOffsetEndInd() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'offset_end_ind' field */
    public avroschema.linked.WikiLink.Builder clearOffsetEndInd() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'phrase' field */
    public java.lang.String getPhrase() {
      return phrase;
    }
    
    /** Sets the value of the 'phrase' field */
    public avroschema.linked.WikiLink.Builder setPhrase(java.lang.String value) {
      validate(fields()[2], value);
      this.phrase = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'phrase' field has been set */
    public boolean hasPhrase() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'phrase' field */
    public avroschema.linked.WikiLink.Builder clearPhrase() {
      phrase = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'wiki_link' field */
    public java.lang.String getWikiLink() {
      return wiki_link;
    }
    
    /** Sets the value of the 'wiki_link' field */
    public avroschema.linked.WikiLink.Builder setWikiLink(java.lang.String value) {
      validate(fields()[3], value);
      this.wiki_link = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'wiki_link' field has been set */
    public boolean hasWikiLink() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'wiki_link' field */
    public avroschema.linked.WikiLink.Builder clearWikiLink() {
      wiki_link = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public WikiLink build() {
      try {
        WikiLink record = new WikiLink();
        record.offset_begin_ind = fieldSetFlags()[0] ? this.offset_begin_ind : (java.lang.Integer) defaultValue(fields()[0]);
        record.offset_end_ind = fieldSetFlags()[1] ? this.offset_end_ind : (java.lang.Integer) defaultValue(fields()[1]);
        record.phrase = fieldSetFlags()[2] ? this.phrase : (java.lang.String) defaultValue(fields()[2]);
        record.wiki_link = fieldSetFlags()[3] ? this.wiki_link : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
