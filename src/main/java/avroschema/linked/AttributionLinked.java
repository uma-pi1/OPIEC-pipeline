/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avroschema.linked;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AttributionLinked extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AttributionLinked\",\"namespace\":\"avroschema.linked\",\"fields\":[{\"name\":\"predicate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"modality\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"attribution_phrase_original\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"polarity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"time\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TimeLinked\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"timex3_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"timex3_xml\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"disambiguated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"core_words\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TokenLinked\",\"fields\":[{\"name\":\"pos\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"ner\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"span\",\"type\":{\"type\":\"record\",\"name\":\"Span\",\"fields\":[{\"name\":\"start_index\",\"type\":[\"int\",\"null\"]},{\"name\":\"end_index\",\"type\":[\"int\",\"null\"]}]}},{\"name\":\"lemma\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"word\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"index\",\"type\":[\"int\",\"null\"]},{\"name\":\"w_link\",\"type\":{\"type\":\"record\",\"name\":\"WikiLink\",\"fields\":[{\"name\":\"offset_begin_ind\",\"type\":\"int\"},{\"name\":\"offset_end_ind\",\"type\":\"int\"},{\"name\":\"phrase\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"wiki_link\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}}]},{\"name\":\"pre_mods\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"post_mods\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"all_words\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"predicate\",\"type\":[\"null\",\"TokenLinked\"]}]}}]},{\"name\":\"space\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SpaceLinked\",\"fields\":[{\"name\":\"core_words\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"pre_mods\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"post_mods\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"all_words\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"TokenLinked\"}]},{\"name\":\"predicate\",\"type\":[\"null\",\"TokenLinked\"]}]}}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String predicate;
  @Deprecated public java.lang.String modality;
  @Deprecated public java.lang.String attribution_phrase_original;
  @Deprecated public java.lang.String polarity;
  @Deprecated public java.util.List<avroschema.linked.TimeLinked> time;
  @Deprecated public java.util.List<avroschema.linked.SpaceLinked> space;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AttributionLinked() {}

  /**
   * All-args constructor.
   */
  public AttributionLinked(java.lang.String predicate, java.lang.String modality, java.lang.String attribution_phrase_original, java.lang.String polarity, java.util.List<avroschema.linked.TimeLinked> time, java.util.List<avroschema.linked.SpaceLinked> space) {
    this.predicate = predicate;
    this.modality = modality;
    this.attribution_phrase_original = attribution_phrase_original;
    this.polarity = polarity;
    this.time = time;
    this.space = space;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return predicate;
    case 1: return modality;
    case 2: return attribution_phrase_original;
    case 3: return polarity;
    case 4: return time;
    case 5: return space;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: predicate = (java.lang.String)value$; break;
    case 1: modality = (java.lang.String)value$; break;
    case 2: attribution_phrase_original = (java.lang.String)value$; break;
    case 3: polarity = (java.lang.String)value$; break;
    case 4: time = (java.util.List<avroschema.linked.TimeLinked>)value$; break;
    case 5: space = (java.util.List<avroschema.linked.SpaceLinked>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'predicate' field.
   */
  public java.lang.String getPredicate() {
    return predicate;
  }

  /**
   * Sets the value of the 'predicate' field.
   * @param value the value to set.
   */
  public void setPredicate(java.lang.String value) {
    this.predicate = value;
  }

  /**
   * Gets the value of the 'modality' field.
   */
  public java.lang.String getModality() {
    return modality;
  }

  /**
   * Sets the value of the 'modality' field.
   * @param value the value to set.
   */
  public void setModality(java.lang.String value) {
    this.modality = value;
  }

  /**
   * Gets the value of the 'attribution_phrase_original' field.
   */
  public java.lang.String getAttributionPhraseOriginal() {
    return attribution_phrase_original;
  }

  /**
   * Sets the value of the 'attribution_phrase_original' field.
   * @param value the value to set.
   */
  public void setAttributionPhraseOriginal(java.lang.String value) {
    this.attribution_phrase_original = value;
  }

  /**
   * Gets the value of the 'polarity' field.
   */
  public java.lang.String getPolarity() {
    return polarity;
  }

  /**
   * Sets the value of the 'polarity' field.
   * @param value the value to set.
   */
  public void setPolarity(java.lang.String value) {
    this.polarity = value;
  }

  /**
   * Gets the value of the 'time' field.
   */
  public java.util.List<avroschema.linked.TimeLinked> getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(java.util.List<avroschema.linked.TimeLinked> value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'space' field.
   */
  public java.util.List<avroschema.linked.SpaceLinked> getSpace() {
    return space;
  }

  /**
   * Sets the value of the 'space' field.
   * @param value the value to set.
   */
  public void setSpace(java.util.List<avroschema.linked.SpaceLinked> value) {
    this.space = value;
  }

  /** Creates a new AttributionLinked RecordBuilder */
  public static avroschema.linked.AttributionLinked.Builder newBuilder() {
    return new avroschema.linked.AttributionLinked.Builder();
  }
  
  /** Creates a new AttributionLinked RecordBuilder by copying an existing Builder */
  public static avroschema.linked.AttributionLinked.Builder newBuilder(avroschema.linked.AttributionLinked.Builder other) {
    return new avroschema.linked.AttributionLinked.Builder(other);
  }
  
  /** Creates a new AttributionLinked RecordBuilder by copying an existing AttributionLinked instance */
  public static avroschema.linked.AttributionLinked.Builder newBuilder(avroschema.linked.AttributionLinked other) {
    return new avroschema.linked.AttributionLinked.Builder(other);
  }
  
  /**
   * RecordBuilder for AttributionLinked instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AttributionLinked>
    implements org.apache.avro.data.RecordBuilder<AttributionLinked> {

    private java.lang.String predicate;
    private java.lang.String modality;
    private java.lang.String attribution_phrase_original;
    private java.lang.String polarity;
    private java.util.List<avroschema.linked.TimeLinked> time;
    private java.util.List<avroschema.linked.SpaceLinked> space;

    /** Creates a new Builder */
    private Builder() {
      super(avroschema.linked.AttributionLinked.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avroschema.linked.AttributionLinked.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.predicate)) {
        this.predicate = data().deepCopy(fields()[0].schema(), other.predicate);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.modality)) {
        this.modality = data().deepCopy(fields()[1].schema(), other.modality);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.attribution_phrase_original)) {
        this.attribution_phrase_original = data().deepCopy(fields()[2].schema(), other.attribution_phrase_original);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.polarity)) {
        this.polarity = data().deepCopy(fields()[3].schema(), other.polarity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.time)) {
        this.time = data().deepCopy(fields()[4].schema(), other.time);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.space)) {
        this.space = data().deepCopy(fields()[5].schema(), other.space);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AttributionLinked instance */
    private Builder(avroschema.linked.AttributionLinked other) {
            super(avroschema.linked.AttributionLinked.SCHEMA$);
      if (isValidValue(fields()[0], other.predicate)) {
        this.predicate = data().deepCopy(fields()[0].schema(), other.predicate);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.modality)) {
        this.modality = data().deepCopy(fields()[1].schema(), other.modality);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.attribution_phrase_original)) {
        this.attribution_phrase_original = data().deepCopy(fields()[2].schema(), other.attribution_phrase_original);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.polarity)) {
        this.polarity = data().deepCopy(fields()[3].schema(), other.polarity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.time)) {
        this.time = data().deepCopy(fields()[4].schema(), other.time);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.space)) {
        this.space = data().deepCopy(fields()[5].schema(), other.space);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'predicate' field */
    public java.lang.String getPredicate() {
      return predicate;
    }
    
    /** Sets the value of the 'predicate' field */
    public avroschema.linked.AttributionLinked.Builder setPredicate(java.lang.String value) {
      validate(fields()[0], value);
      this.predicate = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'predicate' field has been set */
    public boolean hasPredicate() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'predicate' field */
    public avroschema.linked.AttributionLinked.Builder clearPredicate() {
      predicate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'modality' field */
    public java.lang.String getModality() {
      return modality;
    }
    
    /** Sets the value of the 'modality' field */
    public avroschema.linked.AttributionLinked.Builder setModality(java.lang.String value) {
      validate(fields()[1], value);
      this.modality = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'modality' field has been set */
    public boolean hasModality() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'modality' field */
    public avroschema.linked.AttributionLinked.Builder clearModality() {
      modality = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'attribution_phrase_original' field */
    public java.lang.String getAttributionPhraseOriginal() {
      return attribution_phrase_original;
    }
    
    /** Sets the value of the 'attribution_phrase_original' field */
    public avroschema.linked.AttributionLinked.Builder setAttributionPhraseOriginal(java.lang.String value) {
      validate(fields()[2], value);
      this.attribution_phrase_original = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'attribution_phrase_original' field has been set */
    public boolean hasAttributionPhraseOriginal() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'attribution_phrase_original' field */
    public avroschema.linked.AttributionLinked.Builder clearAttributionPhraseOriginal() {
      attribution_phrase_original = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'polarity' field */
    public java.lang.String getPolarity() {
      return polarity;
    }
    
    /** Sets the value of the 'polarity' field */
    public avroschema.linked.AttributionLinked.Builder setPolarity(java.lang.String value) {
      validate(fields()[3], value);
      this.polarity = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'polarity' field has been set */
    public boolean hasPolarity() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'polarity' field */
    public avroschema.linked.AttributionLinked.Builder clearPolarity() {
      polarity = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'time' field */
    public java.util.List<avroschema.linked.TimeLinked> getTime() {
      return time;
    }
    
    /** Sets the value of the 'time' field */
    public avroschema.linked.AttributionLinked.Builder setTime(java.util.List<avroschema.linked.TimeLinked> value) {
      validate(fields()[4], value);
      this.time = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'time' field has been set */
    public boolean hasTime() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'time' field */
    public avroschema.linked.AttributionLinked.Builder clearTime() {
      time = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'space' field */
    public java.util.List<avroschema.linked.SpaceLinked> getSpace() {
      return space;
    }
    
    /** Sets the value of the 'space' field */
    public avroschema.linked.AttributionLinked.Builder setSpace(java.util.List<avroschema.linked.SpaceLinked> value) {
      validate(fields()[5], value);
      this.space = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'space' field has been set */
    public boolean hasSpace() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'space' field */
    public avroschema.linked.AttributionLinked.Builder clearSpace() {
      space = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public AttributionLinked build() {
      try {
        AttributionLinked record = new AttributionLinked();
        record.predicate = fieldSetFlags()[0] ? this.predicate : (java.lang.String) defaultValue(fields()[0]);
        record.modality = fieldSetFlags()[1] ? this.modality : (java.lang.String) defaultValue(fields()[1]);
        record.attribution_phrase_original = fieldSetFlags()[2] ? this.attribution_phrase_original : (java.lang.String) defaultValue(fields()[2]);
        record.polarity = fieldSetFlags()[3] ? this.polarity : (java.lang.String) defaultValue(fields()[3]);
        record.time = fieldSetFlags()[4] ? this.time : (java.util.List<avroschema.linked.TimeLinked>) defaultValue(fields()[4]);
        record.space = fieldSetFlags()[5] ? this.space : (java.util.List<avroschema.linked.SpaceLinked>) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
