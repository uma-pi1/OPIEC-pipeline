/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avroschema.linked;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Span extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Span\",\"namespace\":\"avroschema.linked\",\"fields\":[{\"name\":\"start_index\",\"type\":[\"int\",\"null\"]},{\"name\":\"end_index\",\"type\":[\"int\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Integer start_index;
  @Deprecated public java.lang.Integer end_index;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Span() {}

  /**
   * All-args constructor.
   */
  public Span(java.lang.Integer start_index, java.lang.Integer end_index) {
    this.start_index = start_index;
    this.end_index = end_index;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return start_index;
    case 1: return end_index;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: start_index = (java.lang.Integer)value$; break;
    case 1: end_index = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'start_index' field.
   */
  public java.lang.Integer getStartIndex() {
    return start_index;
  }

  /**
   * Sets the value of the 'start_index' field.
   * @param value the value to set.
   */
  public void setStartIndex(java.lang.Integer value) {
    this.start_index = value;
  }

  /**
   * Gets the value of the 'end_index' field.
   */
  public java.lang.Integer getEndIndex() {
    return end_index;
  }

  /**
   * Sets the value of the 'end_index' field.
   * @param value the value to set.
   */
  public void setEndIndex(java.lang.Integer value) {
    this.end_index = value;
  }

  /** Creates a new Span RecordBuilder */
  public static avroschema.linked.Span.Builder newBuilder() {
    return new avroschema.linked.Span.Builder();
  }
  
  /** Creates a new Span RecordBuilder by copying an existing Builder */
  public static avroschema.linked.Span.Builder newBuilder(avroschema.linked.Span.Builder other) {
    return new avroschema.linked.Span.Builder(other);
  }
  
  /** Creates a new Span RecordBuilder by copying an existing Span instance */
  public static avroschema.linked.Span.Builder newBuilder(avroschema.linked.Span other) {
    return new avroschema.linked.Span.Builder(other);
  }
  
  /**
   * RecordBuilder for Span instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Span>
    implements org.apache.avro.data.RecordBuilder<Span> {

    private java.lang.Integer start_index;
    private java.lang.Integer end_index;

    /** Creates a new Builder */
    private Builder() {
      super(avroschema.linked.Span.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avroschema.linked.Span.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.start_index)) {
        this.start_index = data().deepCopy(fields()[0].schema(), other.start_index);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.end_index)) {
        this.end_index = data().deepCopy(fields()[1].schema(), other.end_index);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Span instance */
    private Builder(avroschema.linked.Span other) {
            super(avroschema.linked.Span.SCHEMA$);
      if (isValidValue(fields()[0], other.start_index)) {
        this.start_index = data().deepCopy(fields()[0].schema(), other.start_index);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.end_index)) {
        this.end_index = data().deepCopy(fields()[1].schema(), other.end_index);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'start_index' field */
    public java.lang.Integer getStartIndex() {
      return start_index;
    }
    
    /** Sets the value of the 'start_index' field */
    public avroschema.linked.Span.Builder setStartIndex(java.lang.Integer value) {
      validate(fields()[0], value);
      this.start_index = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'start_index' field has been set */
    public boolean hasStartIndex() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'start_index' field */
    public avroschema.linked.Span.Builder clearStartIndex() {
      start_index = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'end_index' field */
    public java.lang.Integer getEndIndex() {
      return end_index;
    }
    
    /** Sets the value of the 'end_index' field */
    public avroschema.linked.Span.Builder setEndIndex(java.lang.Integer value) {
      validate(fields()[1], value);
      this.end_index = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'end_index' field has been set */
    public boolean hasEndIndex() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'end_index' field */
    public avroschema.linked.Span.Builder clearEndIndex() {
      end_index = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Span build() {
      try {
        Span record = new Span();
        record.start_index = fieldSetFlags()[0] ? this.start_index : (java.lang.Integer) defaultValue(fields()[0]);
        record.end_index = fieldSetFlags()[1] ? this.end_index : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
